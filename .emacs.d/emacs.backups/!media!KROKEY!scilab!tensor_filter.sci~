function res=tensor_filter(tensor)
  M=size(tensor, 3);
  N=size(tensor, 4);
  res=zeros(tensor);
  printf("Construction du filtre.\n");
  //filter=zeros(3, 3, M, N);
  for i=2:M-1
    printf("%d\n", i);
    for j=2:N-1
      t=tensor(:, :, i, j);
      [V,D] = spec(t);
      l1 = D(1, 1);
      l2 = D(2, 2);
      V1 = V(:, 1);
      V2 = V(:, 2);
      if l1 > l2
	temp=l1;
	l1=l2;
	l2=temp;
	temp=V1;
	V1=V2;
	V2=temp;
      end
      angle=abs(V1(1));
      if angle < sin(%pi/8)
	//filter(:, :, i, j)=v;
	res(:, :, i, j)=tensor(:, :, i, j)+...
	    tensor(:, :, i-1, j)+...
	    tensor(:, :, i+1, j);
      elseif angle < cos(%pi/8)
	if V1(2) > 0
	  res(:, :, i, j)=tensor(:, :, i, j)+...
	      tensor(:, :, i-1, j+1)+...
	      tensor(:, :, i+1, j-1);
	  
	  //filter(:, :, i, j)=a;
	else
	  //filter(:, :, i, j)=d;
	  res(:, :, i, j)=tensor(:, :, i, j)+...
	      tensor(:, :, i-1, j-1)+...
	      tensor(:, :, i+1, j+1);
	end
      else
	//filter(:, :, i, j)=h;
	res(:, :, i, j)=tensor(:, :, i, j)+...
	    tensor(:, :, i, j-1)+...
	    tensor(:, :, i, j+1);
      end
    end
  end
endfunction

      