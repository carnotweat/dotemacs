;; -*- mode: emacs-lisp; coding: utf-8-unix -*-
;; Minibuffer history file, automatically generated by `savehist'.

(setq savehist-minibuffer-history-variables '(gnus-group-history file-name-history TeX-command-history erc-nick-history-list erc-server-history-list minibuffer-history extended-command-history ido-file-history ido-buffer-history))
(setq file-name-history '("/home/srousseau/.ssh/id_rsa.pub" "/home/srousseau/.emacs.d/auto-install/anything.el" "/home/srousseau/git/dotemacs/.emacs.d/auto-install.el" "/media/KROKEY/scilab/tensor_img_filter.sci" "/media/KROKEY/scilab/tensor2img.sci" "/media/KROKEY/scilab/tensor_filter.sci" "/media/KROKEY/Documents/Org/" "/media/KROKEY/Documents/Org/test.org" "/media/KROKEY/Documents/Org" "/media/KROKEY/article/article.bbl" "/media/KROKEY/article/phil_article.bbl" "/media/KROKEY/article/spconf.sty" "~/.emacs" "/media/KROKEY/article/article.tex"))
(setq erc-nick-history-list '("thisirs"))
(setq erc-server-history-list '("irc.freenode.net"))
(setq minibuffer-history '("anything.el" "anything" "emacs" "xpdf -remote mod\\èle_lettre -raise mod\\èle_lettre.pdf " "color-themes" "color-theme-6.6.0/color-theme" "color-theme" "color-theme-6.6.0" "6667" "remember" "fill-paragraph"))
(setq extended-command-history '("auto-install-from-emacswiki" "eval-region" "eval-buffer" "twit-search" "eval-buffer" "make-directory" "color-theme-select" "eval-buffer" "color-theme-print" "color-theme-describe" "color-theme-djcb-dark" "eval-buffer" "load-library" "eval-buffer" "erc" "hippie-expand" "org-todo-list" "org-agenda-list" "remember" "remember-region" "remember" "AmSTeX-mode-menu" "Buffer-menu-isearch-buffers-regexp" "package-list-packages" "eval-buffer" "org-mode" "fill-paragraph" "eval-region" "eval-buffer" "eldoc-mode"))
(setq ido-file-history '(".emacs" "auto-install.el" "~/" "tensor_img_filter.sci" "te" "sc" "test.org" "Org/t" "Org" "Org-" "Org" "D" "KRO" ".sc" "~/" "/etc/udev/rules.d/10-local.rules" "on" "back" ".sc" "me" ".no" ".notes" "az.org" "az.tex" "t" "az.el" ".ema" ".em" "az.tex" "tm"))
(setq ido-buffer-history '("*s" "*m" "*"))
